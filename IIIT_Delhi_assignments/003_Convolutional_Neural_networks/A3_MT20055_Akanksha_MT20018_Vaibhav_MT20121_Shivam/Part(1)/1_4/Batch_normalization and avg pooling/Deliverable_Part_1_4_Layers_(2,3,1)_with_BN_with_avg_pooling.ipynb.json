{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Deliverable_Part_1_4_Layers_(2,3,1)_with_BN_with_avg_pooling.ipynb","provenance":[],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"z1y8_SXpdine"},"source":["# Import statements "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Iogvt5eI-NOk","executionInfo":{"status":"ok","timestamp":1618642332661,"user_tz":-330,"elapsed":1504,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}},"outputId":"0c9043f3-671e-4343-ac47-bb35c356cf63"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"utDoiASySB39","executionInfo":{"status":"ok","timestamp":1618642333643,"user_tz":-330,"elapsed":1994,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["from  my_ml_lib import MetricTools, PlotTools"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"2GPNbC8UdlZX","executionInfo":{"status":"ok","timestamp":1618642337035,"user_tz":-330,"elapsed":5301,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["import os\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import pickle\n","import pandas as pd \n","import matplotlib.pyplot as plt\n","from matplotlib.pyplot import figure \n","import json\n","import datetime\n","import copy\n","from PIL import Image as im\n","import joblib\n","from sklearn.model_selection import train_test_split\n","# import math as Math\n","import random\n","import torch.optim"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"XznHCx6ydmmS","executionInfo":{"status":"ok","timestamp":1618642337409,"user_tz":-330,"elapsed":5593,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["import torch\n","from torch import nn\n","from torch import optim\n","import torch.nn.functional as F\n","from torchvision import datasets, transforms, models\n","from torch.utils.data import DataLoader\n","from torch.utils.data import Dataset\n","import torchvision"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"2FRmNHO_dmrF","executionInfo":{"status":"ok","timestamp":1618642337975,"user_tz":-330,"elapsed":6076,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["import cv2"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"vqL1Kq0idnDC","executionInfo":{"status":"ok","timestamp":1618642337976,"user_tz":-330,"elapsed":5992,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":[""],"execution_count":6,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HVR5HtsIdncF"},"source":["# Saving and Loading code "]},{"cell_type":"code","metadata":{"id":"P9yFkBbUdoz7","executionInfo":{"status":"ok","timestamp":1618642337977,"user_tz":-330,"elapsed":5818,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["# Saving and Loading models using joblib \n","def save(filename, obj):\n","  with open(filename, 'wb') as handle:\n","      joblib.dump(obj, handle, protocol=pickle.HIGHEST_PROTOCOL)\n","\n","def load(filename):\n","  with open(filename, 'rb') as handle:\n","      return joblib.load(filename)\n"],"execution_count":7,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WVxLGeMgdqkW"},"source":["# Importing Dataset "]},{"cell_type":"code","metadata":{"id":"B__Ue0eRdsaj","executionInfo":{"status":"ok","timestamp":1618642339275,"user_tz":-330,"elapsed":6940,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["p = \"/content/drive/MyDrive/A3/\"\n","data_path = p + \"dataset/train.pkl\"\n","x = load(data_path)"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"id":"4j-AhjELo0At","executionInfo":{"status":"ok","timestamp":1618642339275,"user_tz":-330,"elapsed":6373,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["# save_path = \"/content/drive/MyDrive/SEM-2/05-DL /Assignments/A3/dataset/\"\n","# # saving the images and labels array \n","# save(save_path + \"data_image.pkl\",data_image)\n","# save(save_path + \"data_label.pkl\",data_label)\n","# # dict values where labels key and image arrays as vlaues in form of list \n","# save(save_path + \"my_dict.pkl\",my_dict)"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"zKurY8cao0HV","executionInfo":{"status":"ok","timestamp":1618642344790,"user_tz":-330,"elapsed":2964,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["save_path = p + \"dataset/\"\n","# saving the images and labels array \n","data_image = load(save_path + \"data_image.pkl\")\n","data_label = load(save_path + \"data_label.pkl\")\n","# dict values where labels key and image arrays as vlaues in form of list \n","my_dict = load(save_path + \"my_dict.pkl\")"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K1Mjytyoo0OM","executionInfo":{"status":"ok","timestamp":1618642344791,"user_tz":-330,"elapsed":2461,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}},"outputId":"a68135da-2a7c-45c8-8547-fab4b61dbc56"},"source":["len(data_image) , len(data_label), my_dict.keys()"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5000, 5000, dict_keys([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"markdown","metadata":{"id":"reu4bmKXzZch"},"source":["# Data Class and Data Loaders and Data transforms "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BUHDt_iEzbtB","executionInfo":{"status":"ok","timestamp":1618642344791,"user_tz":-330,"elapsed":2293,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}},"outputId":"a850bb67-1eeb-44f5-cc53-007a738a1940"},"source":["len(x['names']) ,x['names'][4999] , data_image[0].shape"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5000, 'train05000', (32, 32, 3))"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"7UY8CjMb3L45"},"source":["## Splitting the data into train and val"]},{"cell_type":"code","metadata":{"id":"QaTSdOG63Qk_","executionInfo":{"status":"ok","timestamp":1618642344792,"user_tz":-330,"elapsed":2112,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["X_train, X_test, y_train, y_test = train_test_split(data_image, data_label, test_size=0.10, random_state=42,stratify=data_label )"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WrRaxUfb30Nh","executionInfo":{"status":"ok","timestamp":1618642344792,"user_tz":-330,"elapsed":2022,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}},"outputId":"58e8f6cb-65f0-42b6-dbcb-384d2ac6c4dd"},"source":["len(X_train) , len(y_train) , len(X_test) ,len(y_test)"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4500, 4500, 500, 500)"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-PYnG0eY4idN","executionInfo":{"status":"ok","timestamp":1618642344793,"user_tz":-330,"elapsed":1954,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}},"outputId":"1d74f353-7206-4bb7-aeb9-43654ca60161"},"source":["pd.DataFrame(y_test).value_counts() "],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["9    50\n","8    50\n","7    50\n","6    50\n","5    50\n","4    50\n","3    50\n","2    50\n","1    50\n","0    50\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"markdown","metadata":{"id":"8DBejOVP3Ts9"},"source":["## Data Class"]},{"cell_type":"code","metadata":{"id":"LiDsHK8MzcD4","executionInfo":{"status":"ok","timestamp":1618642347501,"user_tz":-330,"elapsed":1393,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["class myDataClass(Dataset):\n","  \"\"\"Custom dataset class\"\"\"\n","\n","  def __init__(self, images, labels , transform=None):\n","\n","    \"\"\"\n","    Args:\n","        images : Array of all the images \n","        labels : Correspoing labels of all the images \n","    \"\"\"\n","    \n","    self.images = images\n","    self.labels = labels\n","    self.transform = transform\n","    \n","  def __len__(self):\n","\n","    return len(self.images)\n","\n","  def __getitem__(self, idx):\n","    # converts image value between 0 and 1 and returns a tensor C,H,W \n","    img = torchvision.transforms.functional.to_tensor(self.images[idx])\n","    target = self.labels[idx]\n","    \n","\n","    if self.transform:\n","        img = self.transform(img)\n","    return img,target "],"execution_count":16,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"P-M6IB6o3WQh"},"source":["## Data Loaders "]},{"cell_type":"code","metadata":{"id":"TGBYO6J_zcGe","executionInfo":{"status":"ok","timestamp":1618642347502,"user_tz":-330,"elapsed":807,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["batch = 64\n","train_dataset = myDataClass(X_train, y_train)\n","test_dataset = myDataClass(X_test, y_test)\n","\n","train_dataloader = DataLoader(train_dataset, batch_size= batch, shuffle=True)\n","test_dataloader = DataLoader(test_dataset, batch_size= batch, shuffle=True)"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"XlZB_gOB2_KQ","executionInfo":{"status":"ok","timestamp":1618642347503,"user_tz":-330,"elapsed":717,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["# next(iter(train_dataloader))[0].shape"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NxSyJNaI26T_","executionInfo":{"status":"ok","timestamp":1618642348123,"user_tz":-330,"elapsed":1254,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}},"outputId":"156d09eb-f39b-4000-dbfa-db4b736e1dd7"},"source":["len(train_dataloader) , len(test_dataloader)"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(71, 8)"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"markdown","metadata":{"id":"bpz1XVRu_ql9"},"source":["# Train and Test functions "]},{"cell_type":"code","metadata":{"id":"0_3OoxMmNg1t","executionInfo":{"status":"ok","timestamp":1618642349832,"user_tz":-330,"elapsed":1316,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["def load_best(all_models,model_test):\n","  FILE  = all_models[-1]\n","  \n","  criterion = nn.CrossEntropyLoss()\n","  optimizer = optim.Adam(model_test.parameters(), lr=0)\n","\n","  checkpoint = torch.load(FILE)\n","  model_test.load_state_dict(checkpoint['model_state'])\n","  optimizer.load_state_dict(checkpoint['optim_state'])\n","  epoch = checkpoint['epoch']\n","  model_test.eval()\n","\n","  return model_test\n"],"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"id":"IawJoK7T_xqi","executionInfo":{"status":"ok","timestamp":1618642349832,"user_tz":-330,"elapsed":1237,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["def train(save_path,epochs,train_dataloader,model,test_dataloader,optimizer,criterion,basic_name):\n","  model_no = 1\n","  c = 1\n","  all_models = []\n","\n","  valid_loss_min = np.Inf \n","  train_losses = []\n","  val_losses = []\n","\n","  for e in range(epochs):\n","\n","      train_loss = 0.0\n","      valid_loss = 0.0\n","\n","      model.train()\n","      \n","      for idx, (images,labels) in enumerate(train_dataloader):\n","        \n","          images, labels = images.to(device) , labels.to(device) \n","    \n","          optimizer.zero_grad()        \n","          log_ps= model(images)\n","          loss = criterion(log_ps, labels)\n","          loss.backward()\n","          optimizer.step()\n","          \n","          train_loss += ((1 / (idx + 1)) * (loss.data - train_loss))\n","      else:\n","\n","          accuracy = 0\n","          correct = 0\n","          model.eval()\n","\n","          with torch.no_grad():\n","              for idx, (images,labels) in enumerate(test_dataloader):\n","\n","                  images, labels = images.to(device) , labels.to(device)\n","\n","                  log_ps = model(images)\n","                  \n","                  _, predicted = torch.max(log_ps.data, 1)\n","                  loss = criterion(log_ps, labels)\n","\n","                  # correct += (predicted == labels).sum().item()\n","                  equals = predicted == labels.view(*predicted.shape)\n","                  accuracy += torch.mean(equals.type(torch.FloatTensor))\n","                  valid_loss += ((1 / (idx + 1)) * (loss.data - valid_loss))\n","\n","          print('Epoch: {} \\tTraining Loss: {:.6f} \\tValidation Loss: {:.6f}'.format(\n","              e+1, \n","              train_loss,\n","              valid_loss\n","              ), \"Test Accuracy: {:.3f}\".format(accuracy/len(test_dataloader)))\n","\n","          train_losses.append(train_loss)\n","          val_losses.append(valid_loss)\n","\n","          if valid_loss < valid_loss_min:\n","            \n","            print('Saving model..' + str(model_no))\n","            valid_loss_min = valid_loss\n","\n","            checkpoint = {\n","            \"epoch\": e+1,\n","            \"model_state\": model.state_dict(),\n","            \"optim_state\": optimizer.state_dict(),\n","            \"train_losses\": train_losses,\n","            \"test_losses\": val_losses,\n","            }\n","\n","            FILE =  save_path + basic_name +\"_epoch_\" + str(e+1) + \"_model_\" +  str(model_no)\n","            all_models.append(FILE)\n","            torch.save(checkpoint, FILE)\n","            model_no = model_no + 1\n","          \n","  \n","  save(save_path + basic_name + \"_all_models.pkl\", all_models)\n","  return model, train_losses, val_losses, all_models \n","   "],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"id":"9S6qsEzj_x9n","executionInfo":{"status":"ok","timestamp":1618642349833,"user_tz":-330,"elapsed":1150,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["def plot(train_losses,val_losses,title='Training Validation Loss with CNN'):\n","  plt.plot(train_losses, label='Training loss')\n","  plt.plot(val_losses, label='Validation loss')\n","  plt.xlabel('Iterations')\n","  plt.ylabel('Loss')\n","  plt.legend()\n","  _ = plt.ylim()\n","  plt.title(title)\n","  # plt.savefig('plots/Training Validation Loss with CNN from scratch.png')\n","  plt.show()"],"execution_count":22,"outputs":[]},{"cell_type":"code","metadata":{"id":"GkMgxEVD_yJN","executionInfo":{"status":"ok","timestamp":1618642349833,"user_tz":-330,"elapsed":1055,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["def test(loader, model, criterion, device, name):\n","    test_loss = 0.\n","    correct = 0.\n","    total = 0.\n","    y = None\n","    y_hat = None\n","    \n","    model.eval()\n","    for batch_idx, (images, labels) in enumerate(loader):\n","\n","        # move to GPU or CPU\n","        images, labels = images.to(device)   , labels.to(device) \n","        target = labels\n","\n","        # forward pass: compute predicted outputs by passing inputs to the model\n","        output = model(images)\n","        # calculate the loss\n","        loss = criterion(output,labels)\n","        # update average test loss \n","        test_loss = test_loss + ((1 / (batch_idx + 1)) * (loss.data - test_loss))\n","        # convert output probabilities to predicted class\n","        pred = output.data.max(1, keepdim=True)[1]\n","\n","        if y is None:\n","            y = target.cpu().numpy()\n","            y_hat = pred.data.cpu().view_as(target).numpy()\n","        else:\n","            y = np.append(y, target.cpu().numpy())\n","            y_hat = np.append(y_hat, pred.data.cpu().view_as(target).numpy())\n","\n","\n","        correct += np.sum(pred.view_as(labels).cpu().numpy() == labels.cpu().numpy())\n","        total = total + images.size(0)\n","        # if batch_idx % 20 == 0:\n","        #     print(\"done till batch\" , batch_idx+1)\n","            \n","    print(name + ' Loss: {:.6f}\\n'.format(test_loss))\n","\n","    print(name + ' Accuracy: %2d%% (%2d/%2d)' % (\n","        100. * correct / total, correct, total))\n","    return y, y_hat"],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"id":"efG8-oAkEv3z","executionInfo":{"status":"ok","timestamp":1618642350206,"user_tz":-330,"elapsed":1353,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')"],"execution_count":24,"outputs":[]},{"cell_type":"code","metadata":{"id":"wpqqkahKHE4l","executionInfo":{"status":"ok","timestamp":1618642350206,"user_tz":-330,"elapsed":1275,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["# def train(save_path,epochs,train_dataloader,model,test_dataloader,optimizer,criterion,basic_name)\n","# def plot(train_losses,val_losses,title='Training Validation Loss with CNN')\n","# def test(loader, model, criterion, device)"],"execution_count":25,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wec0leCLEwYo"},"source":["# Relu [ X=2 Y=3 Z=1 ] "]},{"cell_type":"markdown","metadata":{"id":"uzqyfCNfqiXN"},"source":["## CNN-Block-123"]},{"cell_type":"markdown","metadata":{"id":"sVJG2N7gqmoh"},"source":["### model "]},{"cell_type":"code","metadata":{"id":"bs9JxROAqmHf","executionInfo":{"status":"ok","timestamp":1618642352877,"user_tz":-330,"elapsed":822,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["cfg3 = {\n","    'B123': [16,16,'M',32,32,32,'M',64,'M'],\n","}"],"execution_count":26,"outputs":[]},{"cell_type":"code","metadata":{"id":"Iu5D4gUWqq2t","executionInfo":{"status":"ok","timestamp":1618642353354,"user_tz":-330,"elapsed":718,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["def make_layers3(cfg, batch_norm=True):\n","\n","    layers = []\n","    in_channels = 3\n","    for v in cfg:\n","        if v == 'M':\n","            layers += [nn.AvgPool2d(kernel_size=2, stride=2)]\n","        elif v == 'M1':\n","            layers += [nn.AvgPool2d(kernel_size=4, stride=3)]\n","        elif v == 'D':\n","            layers += [nn.Dropout(p=0.5)]\n","        else:\n","            conv2d = nn.Conv2d(in_channels, v, kernel_size=3)\n","            if batch_norm:\n","                layers += [conv2d, nn.BatchNorm2d(v), nn.ReLU(inplace=True)]\n","            else:\n","                layers += [conv2d, nn.ReLU(inplace=True)]\n","            in_channels = v\n","\n","    return nn.Sequential(*layers)"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"id":"ewWE-5oTrA1v","executionInfo":{"status":"ok","timestamp":1618642365479,"user_tz":-330,"elapsed":1418,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["class Model_B123(nn.Module):\n","    '''\n","        Model\n","    '''\n","    def __init__(self, features):\n","\n","        super(Model_B123, self).__init__()\n","        self.features = features \n","\n","        self.classifier = nn.Sequential(\n","            # nn.Linear(1600, 512),\n","            # nn.ReLU(True),\n","            # nn.Linear(512, 256),\n","            # nn.ReLU(True),\n","            # nn.Linear(256, 64),\n","            # nn.ReLU(True),\n","            nn.Linear(64, 10),\n","        )\n","       \n","    def forward(self, x):\n","        x = self.features(x)\n","        # print(x.shape)\n","        x = x.view(x.size(0), -1)\n","        x = self.classifier(x)\n","        return x"],"execution_count":30,"outputs":[]},{"cell_type":"code","metadata":{"id":"gOOCCTbarA-A","executionInfo":{"status":"ok","timestamp":1618642365480,"user_tz":-330,"elapsed":1001,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["# m = Model_B123(make_layers3(cfg3['B123']))\n","# for i,l in train_dataloader:\n","#   o = m(i)"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v6ZRV-LOrrTr","executionInfo":{"status":"ok","timestamp":1618642377338,"user_tz":-330,"elapsed":11777,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}},"outputId":"7cea1800-492a-44b2-a6d7-4b0dd5029078"},"source":["model3 = Model_B123(make_layers3(cfg3['B123'])).to(device) \n","learning_rate = 0.01\n","criterion3 = nn.CrossEntropyLoss()\n","optimizer3 = optim.Adam(model3.parameters(), lr=learning_rate)\n","print(model3)"],"execution_count":32,"outputs":[{"output_type":"stream","text":["Model_B123(\n","  (features): Sequential(\n","    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1))\n","    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    (2): ReLU(inplace=True)\n","    (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1))\n","    (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    (5): ReLU(inplace=True)\n","    (6): AvgPool2d(kernel_size=2, stride=2, padding=0)\n","    (7): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1))\n","    (8): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    (9): ReLU(inplace=True)\n","    (10): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1))\n","    (11): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    (12): ReLU(inplace=True)\n","    (13): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1))\n","    (14): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    (15): ReLU(inplace=True)\n","    (16): AvgPool2d(kernel_size=2, stride=2, padding=0)\n","    (17): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1))\n","    (18): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    (19): ReLU(inplace=True)\n","    (20): AvgPool2d(kernel_size=2, stride=2, padding=0)\n","  )\n","  (classifier): Sequential(\n","    (0): Linear(in_features=64, out_features=10, bias=True)\n","  )\n",")\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"J64Z8g_Jqr7V"},"source":["### train "]},{"cell_type":"code","metadata":{"id":"JeJ9mIPcqrAP"},"source":["# !rm  '/content/drive/MyDrive/SEM-2/05-DL /Assignments/A3/models_saved_Q1/1_3/bw_blocks/Dropout(0.5)/cnn_block123/'*\n","# !ls  '/content/drive/MyDrive/SEM-2/05-DL /Assignments/A3/models_saved_Q1/1_3/bw_blocks/Dropout(0.5)/cnn_block123/'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ktg9rq0EqrH0","executionInfo":{"status":"ok","timestamp":1618642378943,"user_tz":-330,"elapsed":1603,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["save_path3 = p + \"models_saved_Q1/1_4/colab_notebooks /Batchnorm_and_pooling/models/\""],"execution_count":33,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Oi-qyO4ir16f","executionInfo":{"status":"ok","timestamp":1618642405138,"user_tz":-330,"elapsed":19745,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}},"outputId":"c96b1060-3edb-454f-95b6-23378d32e3da"},"source":["m, train_losses, val_losses,m_all_models = train(save_path3,30,train_dataloader,model3,test_dataloader,optimizer3,criterion3,\"cnn_b123_x2_y3_z1_with_BN_avg_pool\")"],"execution_count":34,"outputs":[{"output_type":"stream","text":["Epoch: 1 \tTraining Loss: 1.781814 \tValidation Loss: 1.742422 Test Accuracy: 0.380\n","Saving model..1\n","Epoch: 2 \tTraining Loss: 1.538301 \tValidation Loss: 1.759396 Test Accuracy: 0.420\n","Epoch: 3 \tTraining Loss: 1.353787 \tValidation Loss: 1.706344 Test Accuracy: 0.410\n","Saving model..2\n","Epoch: 4 \tTraining Loss: 1.222314 \tValidation Loss: 3.294884 Test Accuracy: 0.309\n","Epoch: 5 \tTraining Loss: 1.123343 \tValidation Loss: 1.232332 Test Accuracy: 0.561\n","Saving model..3\n","Epoch: 6 \tTraining Loss: 1.062204 \tValidation Loss: 1.670766 Test Accuracy: 0.462\n","Epoch: 7 \tTraining Loss: 1.030753 \tValidation Loss: 1.162838 Test Accuracy: 0.582\n","Saving model..4\n","Epoch: 8 \tTraining Loss: 0.933210 \tValidation Loss: 2.323279 Test Accuracy: 0.427\n","Epoch: 9 \tTraining Loss: 0.890544 \tValidation Loss: 1.687190 Test Accuracy: 0.498\n","Epoch: 10 \tTraining Loss: 0.852794 \tValidation Loss: 0.980241 Test Accuracy: 0.651\n","Saving model..5\n","Epoch: 11 \tTraining Loss: 0.793345 \tValidation Loss: 1.930119 Test Accuracy: 0.466\n","Epoch: 12 \tTraining Loss: 0.757223 \tValidation Loss: 2.983435 Test Accuracy: 0.411\n","Epoch: 13 \tTraining Loss: 0.728269 \tValidation Loss: 0.984480 Test Accuracy: 0.672\n","Epoch: 14 \tTraining Loss: 0.689547 \tValidation Loss: 1.063065 Test Accuracy: 0.631\n","Epoch: 15 \tTraining Loss: 0.624755 \tValidation Loss: 3.133121 Test Accuracy: 0.417\n","Epoch: 16 \tTraining Loss: 0.624138 \tValidation Loss: 1.071210 Test Accuracy: 0.634\n","Epoch: 17 \tTraining Loss: 0.598677 \tValidation Loss: 0.986072 Test Accuracy: 0.654\n","Epoch: 18 \tTraining Loss: 0.557469 \tValidation Loss: 1.284559 Test Accuracy: 0.609\n","Epoch: 19 \tTraining Loss: 0.535266 \tValidation Loss: 0.946154 Test Accuracy: 0.671\n","Saving model..6\n","Epoch: 20 \tTraining Loss: 0.489480 \tValidation Loss: 1.525855 Test Accuracy: 0.573\n","Epoch: 21 \tTraining Loss: 0.459943 \tValidation Loss: 1.182741 Test Accuracy: 0.634\n","Epoch: 22 \tTraining Loss: 0.442261 \tValidation Loss: 0.847824 Test Accuracy: 0.720\n","Saving model..7\n","Epoch: 23 \tTraining Loss: 0.417016 \tValidation Loss: 1.249622 Test Accuracy: 0.638\n","Epoch: 24 \tTraining Loss: 0.358052 \tValidation Loss: 1.144053 Test Accuracy: 0.654\n","Epoch: 25 \tTraining Loss: 0.362003 \tValidation Loss: 1.523916 Test Accuracy: 0.623\n","Epoch: 26 \tTraining Loss: 0.350490 \tValidation Loss: 1.988945 Test Accuracy: 0.527\n","Epoch: 27 \tTraining Loss: 0.285763 \tValidation Loss: 1.090170 Test Accuracy: 0.692\n","Epoch: 28 \tTraining Loss: 0.284580 \tValidation Loss: 1.018162 Test Accuracy: 0.719\n","Epoch: 29 \tTraining Loss: 0.259936 \tValidation Loss: 1.372029 Test Accuracy: 0.649\n","Epoch: 30 \tTraining Loss: 0.315130 \tValidation Loss: 1.265086 Test Accuracy: 0.641\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"iEF6Xr44qtf3"},"source":["### Tests and Plots "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"OJME3KDGqrQW","executionInfo":{"status":"ok","timestamp":1618642415108,"user_tz":-330,"elapsed":1418,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}},"outputId":"a61deccb-24c2-4dae-d722-5c5b04de039b"},"source":["plot(train_losses,val_losses,'Training Validation Loss with CNN-block1')"],"execution_count":35,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"aGueEimwr6hw","executionInfo":{"status":"ok","timestamp":1618642415504,"user_tz":-330,"elapsed":1320,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["all_models3 = load(save_path3 + \"cnn_b123_x2_y3_z1_with_BN_avg_pool_all_models.pkl\")\n","FILE  = all_models3[-1]\n","m3 = Model_B123(make_layers3(cfg3['B123'])).to(device) "],"execution_count":36,"outputs":[]},{"cell_type":"code","metadata":{"id":"Lp0nDcyjr6pW","executionInfo":{"status":"ok","timestamp":1618642415504,"user_tz":-330,"elapsed":1232,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}}},"source":["m3 = load_best(all_models3,m3)"],"execution_count":37,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Hht6dGo_r6w4","executionInfo":{"status":"ok","timestamp":1618642416371,"user_tz":-330,"elapsed":2009,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}},"outputId":"b485479b-0968-43d5-e03e-042de4a650f7"},"source":["train_y, train_y_hat = test(train_dataloader, m3, criterion3, device, \"TRAIN\")"],"execution_count":38,"outputs":[{"output_type":"stream","text":["TRAIN Loss: 0.347223\n","\n","TRAIN Accuracy: 88% (3965/4500)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"JOH7tQRUr64k","executionInfo":{"status":"ok","timestamp":1618642417254,"user_tz":-330,"elapsed":2803,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}},"outputId":"3e6618f0-e2a3-483f-c9bc-edf45c07a9fe"},"source":["cm = MetricTools.confusion_matrix(train_y, train_y_hat, nclasses=10)\n","PlotTools.confusion_matrix(cm, [i for i in range(10)], title='',\n","                           filename='Confusion Matrix with CNN', figsize=(6,6))"],"execution_count":39,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x432 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cZcUExXEsGA5","executionInfo":{"status":"ok","timestamp":1618642417260,"user_tz":-330,"elapsed":2732,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}},"outputId":"93f62ec4-d078-4c53-e212-3849729340cb"},"source":["test_y, test_y_hat = test(test_dataloader, m3, criterion3, device,\"TEST\")"],"execution_count":40,"outputs":[{"output_type":"stream","text":["TEST Loss: 0.853640\n","\n","TEST Accuracy: 72% (360/500)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"iU7y_iHHsGLO","executionInfo":{"status":"ok","timestamp":1618642417261,"user_tz":-330,"elapsed":2642,"user":{"displayName":"akanksha shrimal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5-9IST_h6Gk-NrsbfHFXN6c1NPVKRjReYd9J54Q=s64","userId":"09190534878071493768"}},"outputId":"a7ff597d-10f4-4fb8-acab-4ab353b58185"},"source":["cm = MetricTools.confusion_matrix(test_y, test_y_hat, nclasses=10)\n","PlotTools.confusion_matrix(cm, [i for i in range(10)], title='',\n","                           filename='Confusion Matrix with CNN', figsize=(6,6))"],"execution_count":41,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x432 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"Xy--Uk5_y1y1"},"source":[""],"execution_count":null,"outputs":[]}]}